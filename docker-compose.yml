version: '3'
services:
 api-gateway:
  build:
   context: ./api-gateway
   dockerfile: Dockerfile
  ports:
   - '3000:3000'
  depends_on:
   - user-service
   - event-service

 user-service:
  build:
   context: ./user
   dockerfile: Dockerfile
  ports:
   - '4000:4000'
  depends_on:
   - kafka
   - postgres

 event-service:
  build:
   context: ./event
   dockerfile: Dockerfile
  ports:
   - '5000:5000'
  depends_on:
   - kafka
   - postgres

 zookeeper:
  image: 'docker.io/bitnami/zookeeper:3-debian-10'
  ports:
   - 2181:2181
  environment:
   - ALLOW_ANONYMOUS_LOGIN=yes

 kafka:
  image: 'docker.io/bitnami/kafka:2-debian-10'
  ports:
   - 9092:9092
   - 9093:9093
  environment:
   - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
   - ALLOW_PLAINTEXT_LISTENER=yes
   - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
   - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
   - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
   - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://kafka:9093
   - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
  depends_on:
   - zookeeper

 postgres:
  image: postgres
  ports:
   - '5432:5432'
  environment:
   - POSTGRES_USER=postgres
   - POSTGRES_PASSWORD=postgres
  volumes:
   - ./init-scripts:/docker-entrypoint-initdb.d
   - ./postgres-data:/var/lib/postgresql/data
